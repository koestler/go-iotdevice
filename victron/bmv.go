package victron

import (
	"github.com/koestler/go-iotdevice/dataflow"
)

var RegisterListBmvProduct = dataflow.Registers{
	dataflow.Register{
		Category:    "Product",
		Name:        "ProductId",
		Description: "Product Id",
		Address:     0x0100,
		Type:        dataflow.StringRegister,
	},
	dataflow.Register{
		Category:    "Product",
		Name:        "ProductRevision",
		Description: "Product revision",
		Address:     0x0101,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "",
	},
	dataflow.Register{
		Category:    "Product",
		Name:        "SerialNumber",
		Description: "Serial number",
		Address:     0x010A,
		Type:        dataflow.StringRegister,
	},
	dataflow.Register{
		Category:    "Product",
		Name:        "ModelName",
		Description: "Model name",
		Address:     0x010B,
		Type:        dataflow.StringRegister,
	},
	dataflow.Register{
		Category:    "Product",
		Name:        "Description",
		Description: "Description",
		Address:     0x010C,
		Type:        dataflow.StringRegister,
	},
	dataflow.Register{
		Category:    "Product",
		Name:        "Uptime",
		Description: "Device uptime",
		Address:     0x0120,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "s",
	},
	// skipped Bluetooth capabilities
}

var RegisterListBmvMonitor = dataflow.Registers{
	dataflow.Register{
		Category:    "Monitor",
		Name:        "MainVoltage",
		Description: "Main Voltage",
		Address:     0xED8D,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "AuxVoltage",
		Description: "Aux (starter) Voltage",
		Address:     0xED7D,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "Current",
		Description: "Current",
		Address:     0xED8F,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "A",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "CurrentHighRes",
		Description: "Current (high resolution)",
		Address:     0xED8C,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.001,
		Unit:        "A",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "Power",
		Description: "Power",
		Address:     0xED8E,
		Type:        dataflow.SignedNumberRegister,
		Factor:      1,
		Unit:        "W",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "Consumed",
		Description: "Consumed Ah",
		Address:     0xEEFF,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "Ah",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "SOC",
		Description: "State Of Charge",
		Address:     0x0FFF,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "%",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "TTG",
		Description: "Time to go",
		Address:     0x0FFE,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "min",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "Temperature",
		Description: "Temperature",
		Address:     0xEDEC,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "K",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "MidPointVoltage",
		Description: "Mid-point voltage",
		Address:     0x0382,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "MidPointVoltageDeviation",
		Description: "Mid-point voltage deviation",
		Address:     0x0383,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "%",
	},
	dataflow.Register{
		Category:    "Monitor",
		Name:        "SynchronizationState",
		Description: "Synchronization state",
		Address:     0xEEB6,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "1",
		// todo: decode this enum
	},
}

var RegisterListBmvHistoric = dataflow.Registers{
	dataflow.Register{
		Category:    "Historic",
		Name:        "DepthOfTheDeepestDischarge",
		Description: "Depth of the deepest discharge",
		Address:     0x0300,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "Ah",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "DepthOfTheLastDischarge",
		Description: "Depth of the last discharge",
		Address:     0x0301,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "Ah",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "DepthOfTheAverageDischarge",
		Description: "Depth of the average discharge",
		Address:     0x0302,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "Ah",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "NumberOfCycles",
		Description: "Number of cycles",
		Address:     0x0303,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "NumberOfFullDischarges",
		Description: "Number of full discharges",
		Address:     0x0304,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "CumulativeAmpHours",
		Description: "Cumulative Amp Hours",
		Address:     0x0305,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.1,
		Unit:        "Ah",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "MainVoltageMinimum",
		Description: "Minimum Voltage",
		Address:     0x0306,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "MainVoltageMaximum",
		Description: "Maximum Voltage",
		Address:     0x0307,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "HoursSinceFullCharge",
		Description: "Hours since full charge",
		Address:     0x0308,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      float64(24) / float64(86400),
		Unit:        "h",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "NumberOfAutomaticSynchronizations",
		Description: "Number of automatic synchronizations",
		Address:     0x0309,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "NumberOfLowMainVoltageAlarms",
		Description: "Number of Low Voltage Alarms",
		Address:     0x030A,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "NumberOfHighMainVoltageAlarms",
		Description: "Number of High Voltage Alarms",
		Address:     0x030B,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      1,
		Unit:        "",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "AuxVoltageMinimum",
		Description: "Minimum Starter Voltage",
		Address:     0x030E,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "AuxVoltageMaximum",
		Description: "Maximum Starter Voltage",
		Address:     0x030F,
		Type:        dataflow.SignedNumberRegister,
		Factor:      0.01,
		Unit:        "V",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "AmountOfDischargedEnergy",
		Description: "Amount of discharged energy",
		Address:     0x0310,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "kWh",
	},
	dataflow.Register{
		Category:    "Historic",
		Name:        "AmountOfChargedEnergy",
		Description: "Amount of charged energy",
		Address:     0x0311,
		Type:        dataflow.UnsignedNumberRegister,
		Factor:      0.01,
		Unit:        "kWh",
	},
}

var RegisterListBmv712 = dataflow.MergeRegisters(
	RegisterListBmvProduct,
	RegisterListBmvMonitor,
	RegisterListBmvHistoric,
)

var RegisterListBmv702 = dataflow.FilterRegisters(
	RegisterListBmv712,
	[]string{
		"ProductRevision",
		"Description",
	},
)

var RegisterListBmv700 = dataflow.FilterRegisters(
	RegisterListBmv702,
	[]string{
		"AuxVoltage",
		"Temperature",
		"MidPointVoltage",
		"MidPointVoltageDeviation",
		"AuxVoltageMinimum",
		"AuxVoltageMaximum",
	},
)
